{"ast":null,"code":"var _jsxFileName = \"/home/ohwaaan/Hunter/Summer_2022/team/Bank-of-React/src/App.js\";\n// src/App.js\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport ApiDataComponent from './components/Credits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.updateBalance = newTotal => {\n      let newBalance = Number(this.state.accountBalance) + Number(newTotal);\n      this.state.accountBalance = newBalance;\n    };\n\n    this.state = {\n      accountBalance: 100000.59,\n      desc: '',\n      credits: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits'; // Link to remote website API\n    // Await for promise (completion) returned from API call\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI); // console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        items: response.data\n      }); // Store received data in state's \"users\" object\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  } // Create Routes and React elements to be rendered using React components\n\n\n  render() {\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this); // Pass props to \"LogIn\" component\n\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(ApiDataComponent, {\n      updateBalance: this.updateBalance,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ohwaaan/Hunter/Summer_2022/team/Bank-of-React/src/App.js"],"names":["axios","React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","ApiDataComponent","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","updateBalance","newTotal","newBalance","Number","accountBalance","desc","credits","memberSince","componentDidMount","linkToAPI","response","get","items","data","error","console","log","status","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent"],"mappings":"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","sourcesContent":["// src/App.js\n\n\nimport axios from 'axios';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from        './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from       './components/Login';\nimport ApiDataComponent from './components/Credits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = \n    {\n      accountBalance: 100000.59,\n      desc:    '',\n      credits: [],\n      currentUser:  {\n        userName    : 'Joe Smith' ,\n        memberSince : '11/22/99'  ,\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Update accountBalance\n  updateBalance = (newTotal) => { \n    let newBalance            = Number(this.state.accountBalance) + Number(newTotal) \n    this.state.accountBalance = newBalance\n  }\n\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      // console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({items: response.data});  // Store received data in state's \"users\" object\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n  }  \n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    const HomeComponent = ()        => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n      <UserProfile \n      userName        ={this.state.currentUser.userName}\n      memberSince     ={this.state.currentUser.memberSince} \n      accountBalance  ={this.state.accountBalance}/>);\n\n    const LogInComponent = ()       => (\n    <LogIn \n    user={this.state.currentUser} \n    mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n\n    const CreditsComponent = ()     => (\n    <ApiDataComponent \n    updateBalance={this.updateBalance} \n    accountBalance={this.state.accountBalance}\n    \n    />)   \n    \n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\"             render={HomeComponent}        /> \n          <Route exact path=\"/userProfile\"  render={UserProfileComponent} />\n          <Route exact path=\"/login\"        render={LogInComponent}       />\n          <Route exact path=\"/credits\"      render={CreditsComponent}     />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}