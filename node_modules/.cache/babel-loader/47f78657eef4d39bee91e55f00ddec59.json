{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Library/Mobile Documents/com~apple~CloudDocs/School/Summer 2022/CSCI 395-48/Assignment 4/Bank-of-React/src/components/Credits.js\";\n// src/components/Credits.js\nimport axios from 'axios';\nimport React, { Component } from 'react'; //import AccountBalance from './AccountBalance';\n////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ApiDataComponent extends Component {\n  constructor(props) {\n    // Store received data in state's \"users\" object\n    super(props);\n    this.state = {\n      // Initialize state with an empty users array\n      items: []\n    };\n  } // Make async API call to retrieve data from remote website\n\n\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits'; // Link to remote website API\n    // Await for promise (completion) returned from API call\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI); // console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        items: response.data\n      }); // Store received data in state's \"users\" object\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  }\n\n  render() {\n    // Parse each element in the user JSON array returned from API call\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.items.map(item => {\n        // Extract \"id\", \"name\", and \"email\" properties of each user JSON array element\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" $\", item.amount, \" \", item.description, \" \", item.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add Credit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ApiDataComponent; ///////////////////\n//{this.props.accountBalance} = used to keep track of changed account total\n//Add Credit = user input for both description and amount that is put on display\n// Date is based off current time the 'Add Credit' (possible to create 'new Date()' object and track current date with .getMonth()/.getDay(), etc)\n//Date is YYYY/MM/DD\n//Reference:","map":{"version":3,"sources":["/Users/pc/Library/Mobile Documents/com~apple~CloudDocs/School/Summer 2022/CSCI 395-48/Assignment 4/Bank-of-React/src/components/Credits.js"],"names":["axios","React","Component","ApiDataComponent","constructor","props","state","items","componentDidMount","linkToAPI","response","get","setState","data","error","console","log","status","render","map","item","amount","description","date","handleSubmit"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AAGA;;;;AAEA,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAG;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAG;AACdC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD,GANoC,CAQrC;;;AACuB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,SAAS,GAAG,uCAAhB,CADwB,CACkC;AAE1D;;AACA,QAAI;AAAG;AACL,UAAIC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUF,SAAV,CAArB,CADE,CAEF;AACA;;AACA,WAAKG,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEG,QAAQ,CAACG;AAAjB,OAAd,EAJE,CAIsC;AACzC,KALD,CAMA,OAAOC,KAAP,EAAc;AAAG;AACf,UAAIA,KAAK,CAACJ,QAAV,EAAoB;AAClB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,QAAN,CAAeG,IAA3B,EAFkB,CAEiB;;AACnCE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,QAAN,CAAeO,MAA3B,EAHkB,CAGmB;AACtC;AACF;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAG;AAEV,wBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBAEI,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAuBC,IAAD,IAAU;AAAG;AAC/B,4BACI;AAAA,iCACA;AAAA,6BAAOA,IAAI,CAACC,MAAZ,OAAqBD,IAAI,CAACE,WAA1B,OAAwCF,IAAI,CAACG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKD,OANH,CAFJ,eAYI;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,+BACA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AA6BD;;AA3DoC;;AAgEvC,eAAerB,gBAAf,C,CAEF;AAEA;AAEA;AACA;AAEA;AAEA","sourcesContent":["// src/components/Credits.js\n\nimport axios from 'axios';\nimport React, {Component} from 'react';\n//import AccountBalance from './AccountBalance';\n\n\n////////////////////\n\nclass ApiDataComponent extends Component {\n    constructor(props){  // Store received data in state's \"users\" object\n      super(props);\n      this.state = {  // Initialize state with an empty users array\n        items: []\n      }\n    }\n    \n    // Make async API call to retrieve data from remote website\n    async componentDidMount() {\n      let linkToAPI = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API\n  \n      // Await for promise (completion) returned from API call\n      try {  // Accept success response as array of JSON objects (users)\n        let response = await axios.get(linkToAPI);\n        // console.log(response);  // Print out response\n        // To get data object in the response, need to use \"response.data\"\n        this.setState({items: response.data});  // Store received data in state's \"users\" object\n      } \n      catch (error) {  // Print out errors at console when there is an error response\n        if (error.response) {\n          // The request was made, and the server responded with error message and status code.\n          console.log(error.response.data);  // Print out error message (e.g., Not Found)\n          console.log(error.response.status);  // Print out error status code (e.g., 404)\n        }    \n      }\n    }  \n  \n    render() {  // Parse each element in the user JSON array returned from API call\n\n      return (\n    \n        <div className=\"container\">\n          {\n            this.state.items.map( (item) => {  // Extract \"id\", \"name\", and \"email\" properties of each user JSON array element\n                return (\n                    <ul>\n                    <li> ${item.amount} {item.description} {item.date} </li> \n                    </ul>\n                )\n              }\n            )\n          }\n\n            <form onSubmit={this.handleSubmit}>\n            <div>\n                <label htmlFor=\"Description\">Description</label>\n                <input type=\"text\" name=\"Description\" />\n                <label htmlFor=\"Amount\">Amount</label>\n                <input type=\"text\" name=\"Amount\" />\n            <button>Add Credit</button>\n            </div>\n            </form>\n\n        </div>\n        \n      )\n\n      \n    }\n  \n  }\n\n\n  export default ApiDataComponent;\n\n///////////////////\n\n//{this.props.accountBalance} = used to keep track of changed account total\n\n//Add Credit = user input for both description and amount that is put on display\n// Date is based off current time the 'Add Credit' (possible to create 'new Date()' object and track current date with .getMonth()/.getDay(), etc)\n\n//Date is YYYY/MM/DD\n\n//Reference: \n\n"]},"metadata":{},"sourceType":"module"}