{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Library/Mobile Documents/com~apple~CloudDocs/School/Summer 2022/CSCI 395-48/Assignment 4/Bank-of-React/src/App.js\";\n// src/App.js\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport ApiDataComponent from './components/Credits';\nimport axios from 'axios';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    // Create and initialize state\n    super(props);\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.updateBalanceCredit = newTotal => {\n      let newBalance = Number(this.state.accountBalance) + Number(newTotal);\n      this.state.accountBalance = newBalance;\n    };\n\n    this.updateBalanceDebit = newTotal => {\n      let newBalance = Number(this.state.accountBalance) - Number(newTotal);\n      this.state.accountBalance = newBalance;\n    };\n\n    this.state = {\n      accountBalance: 100000.59,\n      credits: [],\n      debits: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Make async API call to retrieve data from remote website\n\n\n  async componentDidMount() {\n    let linkToAPI = 'https://moj-api.herokuapp.com/credits'; // Link to remote website API\n\n    let linkToAPIDebits = 'https://moj-api.herokuapp.com/debits'; // Await for promise (completion) returned from API call\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToAPI);\n      let responseDebits = await axios.get(linkToAPIDebits); // console.log(response);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        credits: response.data\n      }); // Store received data in state's \"users\" object\n\n      this.setState({\n        debits: responseDebits.data\n      });\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 35\n    }, this); // Pass props to \"LogIn\" component\n\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(ApiDataComponent, {\n      updateBalance: this.updateBalance,\n      credits: this.state.credits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      updateBalance: this.updateBalance,\n      debits: this.state.debits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 36\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pc/Library/Mobile Documents/com~apple~CloudDocs/School/Summer 2022/CSCI 395-48/Assignment 4/Bank-of-React/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","ApiDataComponent","axios","Debits","App","constructor","props","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","updateBalanceCredit","newTotal","newBalance","Number","accountBalance","updateBalanceDebit","credits","debits","memberSince","componentDidMount","linkToAPI","linkToAPIDebits","response","get","responseDebits","data","error","console","log","status","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","updateBalance","DebitsComponent"],"mappings":"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","sourcesContent":["// src/App.js\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport ApiDataComponent from './components/Credits';\nimport axios from 'axios';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor(props) {  // Create and initialize state\n    super(props); \n    this.state = {\n      accountBalance: 100000.59,\n      credits: [],\n      debits: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n      \n    }\n  }\n\n      // Make async API call to retrieve data from remote website\n      async componentDidMount() {\n        let linkToAPI = 'https://moj-api.herokuapp.com/credits';  // Link to remote website API\n        let linkToAPIDebits = 'https://moj-api.herokuapp.com/debits';\n    \n        // Await for promise (completion) returned from API call\n        try {  // Accept success response as array of JSON objects (users)\n          let response = await axios.get(linkToAPI);\n          let responseDebits = await axios.get(linkToAPIDebits)\n          // console.log(response);  // Print out response\n          // To get data object in the response, need to use \"response.data\"\n          this.setState({credits: response.data});  // Store received data in state's \"users\" object\n          this.setState({debits: responseDebits.data})\n        } \n        catch (error) {  // Print out errors at console when there is an error response\n          if (error.response) {\n            // The request was made, and the server responded with error message and status code.\n            console.log(error.response.data);  // Print out error message (e.g., Not Found)\n            console.log(error.response.status);  // Print out error status code (e.g., 404)\n          }    \n        }\n      }  \n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Update accountBalance ++ Add Credit ++\n  updateBalanceCredit = (newTotal) => { \n    let newBalance = Number(this.state.accountBalance) + Number(newTotal) \n    this.state.accountBalance = newBalance\n  }\n\n  // Update accountBalance -- Add Debit --\n  updateBalanceDebit = (newTotal) => { \n    let newBalance = Number(this.state.accountBalance) - Number(newTotal) \n    this.state.accountBalance = newBalance\n  }\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n    const CreditsComponent = () => ( <ApiDataComponent updateBalance={this.updateBalance} credits={this.state.credits} />)   \n    const DebitsComponent = () => (<Debits updateBalance={this.updateBalance} debits={this.state.debits} />)   \n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/> \n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n        \n      </Router>\n      \n    );\n    \n  }\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}